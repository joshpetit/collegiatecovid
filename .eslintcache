[{"/home/joshu/Projects/collegiatecovidtracker/src/index.js":"1","/home/joshu/Projects/collegiatecovidtracker/src/App.js":"2","/home/joshu/Projects/collegiatecovidtracker/src/reportWebVitals.js":"3","/home/joshu/Projects/collegiatecovidtracker/src/data/secret.js":"4","/home/joshu/Projects/collegiatecovidtracker/src/HomePage.js":"5","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/SchoolPage.js":"6","/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/SearchBarz.js":"7","/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/NavBar.js":"8","/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/schools.js":"9","/home/joshu/Projects/collegiatecovidtracker/src/data/db.js":"10","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/Header.js":"11","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/PolicySection.js":"12","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/StatisticSection.js":"13","/home/joshu/Projects/collegiatecovidtracker/src/SchoolDataObjects/SchoolData.js":"14","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/Statistic.js":"15","/home/joshu/Projects/collegiatecovidtracker/src/data/schoolPolicies.js":"16"},{"size":500,"mtime":1607276411580,"results":"17","hashOfConfig":"18"},{"size":145,"mtime":1607282279693,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1607276411580,"results":"20","hashOfConfig":"18"},{"size":465,"mtime":1607282120203,"results":"21","hashOfConfig":"18"},{"size":654,"mtime":1607282279693,"results":"22","hashOfConfig":"18"},{"size":534,"mtime":1607282279693,"results":"23","hashOfConfig":"18"},{"size":1187,"mtime":1607283946080,"results":"24","hashOfConfig":"18"},{"size":1798,"mtime":1607282346225,"results":"25","hashOfConfig":"18"},{"size":337,"mtime":1607282279693,"results":"26","hashOfConfig":"18"},{"size":1072,"mtime":1607283932367,"results":"27","hashOfConfig":"18"},{"size":480,"mtime":1607282279693,"results":"28","hashOfConfig":"18"},{"size":750,"mtime":1607282279693,"results":"29","hashOfConfig":"18"},{"size":714,"mtime":1607282279693,"results":"30","hashOfConfig":"18"},{"size":2147,"mtime":1607282279693,"results":"31","hashOfConfig":"18"},{"size":258,"mtime":1607282279693,"results":"32","hashOfConfig":"18"},{"size":4168,"mtime":1607282279693,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"7ellup",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"36"},"/home/joshu/Projects/collegiatecovidtracker/src/index.js",[],["70","71"],"/home/joshu/Projects/collegiatecovidtracker/src/App.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/reportWebVitals.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/data/secret.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/HomePage.js",["72"],"import React from \"react\";\n\n\nexport default function HomePage(){\n    return (\n    <div className=\"Header\">\n        <div className=\"HomeMenu PureMenu PureMenuHorizontal PureMenuFixed\">\n            <a className=\"PureMenuHeading\" href=\"\">Collegiate Covid</a>\n\n            <ul className=\"PureMenuList\">\n                {/*<li className=\"PureMenuItem PureMenuSelected\"><a href=\"#\" className=\"PureMenuLink\">Home</a></li>*/}\n                {/*<li className=\"PureMenuItem\"><a href=\"#\" className=\"PureMenuLink\">About</a></li>*/}\n                {/*<li className=\"PureMenuItem\">*/}\n                {/*</li>*/}\n            </ul>\n        </div>\n    </div>\n\n    )\n}\n","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/SchoolPage.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/SearchBarz.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/NavBar.js",["73","74"],"/home/joshu/Projects/collegiatecovidtracker/src/HomePageComponents/schools.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/data/db.js",["75"],"/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/Header.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/PolicySection.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/StatisticSection.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/SchoolDataObjects/SchoolData.js",["76"],"//Code to read Json from a file take from:\n//https://medium.com/@osiolabs/read-write-json-files-with-node-js-92d03cc82824#:~:text=Reading%20a%20JSON%20file,data%20into%20a%20JavaScript%20object.\n\nimport SchoolPolicies from \"../data/schoolPolicies\"\n\nexport default class SchoolData {\n    constructor(name) {\n        //need a way or a place to get data from\n        /**\n        const schoolPolicies = new SchoolPolicies();\n        const schoolDataObj = JSON.parse(schoolPolicies.schoolPolicies)\n        const  = this.getNamedUniversity(schoolDataObj,name)\n         */\n\n        //mock data\n        const imgUrl = \"./duke.png\"\n\n        const schoolPolicy = {name:\"Duke University\", frequency:\"1 per week\", people: \"everyone tested\",\n        classes:\"blended\", checkin:\"everyday\"}\n\n        const data =\n            {name: \"Duke University\",\n            cases: 12000000,\n            tests: 23,\n            positivity: 6.23,\n            isolation: 28\n        }\n\n        //initialization of data\n        this.name = schoolPolicy.name;\n        this.frequency = schoolPolicy.frequency;\n        this.people = schoolPolicy.people;\n        this.classes = schoolPolicy.classes;\n        this.checkin = schoolPolicy.checkin;\n        this.cases = data.cases;\n        this.tests = data.tests;\n        this.positivity = data.positivity;\n        this.isolation = data.isolation;\n        this.imgUrl = imgUrl;\n    }\n\n    /**\n    readJson(filepath) {\n        const fs = require('fs');\n\n        fs.readFile(filepath, 'utf8', (err, jsonString) => {\n            if (err) {\n                console.log(\"File read failed:\", err)\n                return\n            }\n            try {\n                const data = JSON.parse(jsonString)\n                console.log(\"parse successful\") // => \"Customer address is: Infinity Loop Drive\"\n                return data;\n            } catch(err) {\n                console.log('Error parsing JSON string:', err)\n            }\n        })\n    }\n     */\n\n    getNamedUniversity(data, name) {\n        let obj;\n        for (obj in data) {\n            if (obj.name === name) {\n                return obj;\n            }\n        }\n    }\n\n}\n\n\n","/home/joshu/Projects/collegiatecovidtracker/src/SchoolPageComponents/Statistic.js",[],"/home/joshu/Projects/collegiatecovidtracker/src/data/schoolPolicies.js",["77"],"\nclass SchoolPolicies {\n    constructor() {\n        this.schoolPolicies = schoolPolicies\n    }\n}\n\n    const schoolPolicies = [\n        {\n            \"name\": \"Duke University\",\n            \"frequency\": \"2 times a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"University of Illinois Urbana-Champaign\",\n            \"frequency\": \"2 times a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Not Required\"\n        },\n        {\n            \"name\": \"University of Virginia\",\n            \"frequency\": \"1 time a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"Ohio State University\",\n            \"frequency\": \"1 time a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"Harvard University\",\n            \"frequency\": \"N/A\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Fully Remote Online Instruction\",\n            \"checkin\": \"Not Required\"\n        },\n        {\n            \"name\": \"Rice University\",\n            \"frequency\": \"1 time a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Only if Symptomatic\"\n        },\n        {\n            \"name\": \"Yale University\",\n            \"frequency\": \"2 times a week\",\n            \"people\": \"surveillance testing of all students on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"Stanford University\",\n            \"frequency\": \"1 time a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Fully Remote Online Instruction\",\n            \"checkin\": \"Not Required\"\n        },\n        {\n            \"name\": \"Tulane University\",\n            \"frequency\": \"1 time a week\",\n            \"people\": \"surveillance testing of all students on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"Carnegie Mellon University\",\n            \"frequency\": \"<1 time a week\",\n            \"people\": \"surveillance testing of all students & faculty on campus\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"University of Michigan\",\n            \"frequency\": \"Not Required\",\n            \"people\": \"symptomatic students & faculty, voluntary asymptomatic tests\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Required Daily\"\n        },\n        {\n            \"name\": \"Oklahoma State University\",\n            \"frequency\": \"Not Required\",\n            \"people\": \"symptomatic students & faculty, voluntary asymptomatic tests\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Not Required\"\n        },\n        {\n            \"name\": \"University of Florida\",\n            \"frequency\": \"Not Required\",\n            \"people\": \"voluntary testing for students and faculty\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Not Required\"\n        },\n        {\n            \"name\": \"University of Nebraska Lincoln\",\n            \"frequency\": \"Not Required\",\n            \"people\": \"voluntary testing for students and faculty\",\n            \"classes\": \"Both Remote & In-Person Instruction\",\n            \"checkin\": \"Not Required\"\n        }\n    ];\n\n",{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":8,"column":13,"nodeType":"84","endLine":8,"endColumn":52},{"ruleId":"85","severity":1,"message":"86","line":20,"column":9,"nodeType":"87","endLine":20,"endColumn":19},{"ruleId":"85","severity":1,"message":"86","line":46,"column":30,"nodeType":"87","endLine":46,"endColumn":40},{"ruleId":"88","severity":1,"message":"89","line":2,"column":5,"nodeType":"90","messageId":"91","endLine":2,"endColumn":10},{"ruleId":"88","severity":1,"message":"92","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":22},{"ruleId":"88","severity":1,"message":"92","line":2,"column":7,"nodeType":"90","messageId":"91","endLine":2,"endColumn":21},"no-native-reassign",["93"],"no-negated-in-lhs",["94"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-unused-vars","'items' is assigned a value but never used.","Identifier","unusedVar","'SchoolPolicies' is defined but never used.","no-global-assign","no-unsafe-negation"]